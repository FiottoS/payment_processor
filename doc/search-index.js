var searchIndex = new Map(JSON.parse('[\
["payment_processor",{"doc":"","t":"CCHFONNNNNNNNNNNNFONNNNNNNNNNNNFFFNNNNNFONNNNNNNNNNNNNNNNNNNNNNNNFJNONNNONNNONNNNNONNNNNNONNNNNNNNNNN","n":["client_handler","client_model","main","AppState","balances","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_balance","clients","from","from","from","from","from","from","into","into","into","into","into","into","new_client","new_credit_transaction","new_debit_transaction","register","register","register","register","register","store_balances","transaction_data","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Client","NEXT_ID","birth_date","birth_date","borrow","borrow_mut","client_name","client_name","clone","clone_into","country","country","credit_transaction","debit_transaction","deserialize","dni_exists","document_number","document_number","find_client_by_id","fmt","from","generate_unique_id","hash","id","id","id_exists","into","last_counter","new","save_balance","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"payment_processor"],[3,"payment_processor::client_handler"],[65,"payment_processor::client_model"],[101,"std::io::error"],[102,"actix_web::config"],[103,"core::result"],[104,"core::any"],[105,"chrono::naive::date"],[106,"alloc::string"],[107,"serde_json::value"],[108,"std::collections::hash::map"],[109,"actix_web::types::json"],[110,"actix_web::data"],[111,"rust_decimal::decimal"],[112,"serde::de"],[113,"alloc::vec"],[114,"std::sync::mutex"],[115,"std::sync::mutex"],[116,"core::option"],[117,"core::fmt"],[118,"core::fmt"],[119,"serde::ser"]],"d":["Client Handler","Client Model","","Se define la estructura AppState, que describe el estado …","","","","","","","","","","","","","","Recibe una solicitud de la información y balance/saldo de …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Recibe la solicitud de crear un nuevo cliente y utiliza …","Recibe la solicitud de acreditar cierto monto a un cliente …","Recibe la solicitud de debitar cierto monto a un cliente …","","","","","","Recibe la solicitud de almacenar el balance actual que se …","","","","","","","","","","","","","","","","","","","","","","","","","","Representa al actor “Cliente” y expone los atributos …","","","","","","","","","","","","Este método se encarga de obtener el ID y el monto …","Este método se encarga de obtener el ID y el monto …","","Este método se encarga de verificar si el dni ya existe o …","","","Este método se encarga de encontrar un cliente en la …","","Returns the argument unchanged.","Este método se encarga de generar un ID único, …","","","","Este método se encarga de verificar si el ID ya existe o …","Calls <code>U::from(self)</code>.","Este método se encarga de obtener el valor del contador …","Constructor Client","Este método se encarga de almacenar los balances de los …","","","","","",""],"i":[0,0,0,0,18,18,3,5,6,7,8,18,3,5,6,7,8,0,18,18,3,5,6,7,8,18,3,5,6,7,8,0,0,0,3,5,6,7,8,0,18,18,3,5,6,7,8,18,3,5,6,7,8,18,3,5,6,7,8,18,3,5,6,7,8,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"f":[0,0,[[],[[2,[1]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[3,4],1],[[5,4],1],[[6,4],1],[[7,4],1],[[8,4],1],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[11,12],0,[-1,-2,[],[]],[-1,-2,[],[]],[11,13],0,[11,11],[[-1,-2],1,[],[]],[11,13],0,[[[17,[[16,[14,15]]]],[19,[18]]],[[9,[[1,[20,21]],14]]]],[[[17,[[16,[14,15]]]],[19,[18]]],[[9,[[1,[20,21]],14]]]],[-1,[[9,[11]]],22],[[14,[24,[[23,[11]]]]],25],[11,13],0,[[[27,[[26,[[23,[11]]]]]],20],[[28,[11]]]],[[11,29],30],[-1,-1,[]],[[[31,[11]]],20],[[11,-1],1,32],[11,20],0,[[20,[31,[11]]],25],[-1,-2,[],[]],[[],[[2,[33]]]],[[14,12,14,14,[31,[11]]],11],[[[19,[18]]],[[2,[1]]]],[[11,-1],9,34],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]]],"c":[],"p":[[1,"tuple"],[8,"Result",101],[5,"new_client",3],[5,"AppService",102],[5,"new_credit_transaction",3],[5,"new_debit_transaction",3],[5,"client_balance",3],[5,"store_balances",3],[6,"Result",103],[5,"TypeId",104],[5,"Client",65],[5,"NaiveDate",105],[1,"str"],[5,"String",106],[6,"Value",107],[5,"HashMap",108],[5,"Json",109],[5,"AppState",3],[5,"Data",110],[1,"u16"],[5,"Decimal",111],[10,"Deserializer",112],[5,"Vec",113],[5,"MutexGuard",114],[1,"bool"],[5,"Mutex",114],[5,"Arc",115],[6,"Option",116],[5,"Formatter",117],[8,"Result",117],[1,"slice"],[10,"Hasher",118],[1,"u32"],[10,"Serializer",119]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
